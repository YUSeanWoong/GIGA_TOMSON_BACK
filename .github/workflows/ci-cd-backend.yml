name: Backend CI/CD

# main 브랜치에 Push 또는 Pull Request 시에 실행
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Make Gradle wrapper executable
        run: chmod +x gradlew

      # 2) JDK 설치
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      # 3) 애플리케이션 빌드 (Gradle 기준)
      - name: Build with Gradle
        run: ./gradlew clean bootJar -x test

      # 4) 단위 테스트
      - name: Run tests
        run: ./gradlew test

      # 5) GCP 인증 (서비스 계정 키)
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 6) Docker → Artifact Registry 인증 설정
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker --quiet asia-northeast3-docker.pkg.dev

      # 7) Docker 이미지 빌드
      - name: Build & Tag Docker image
        run: |
          REPO=tomson-backend
          IMAGE=asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${REPO}/${{ secrets.BACKEND_SERVICE_NAME }}:${{ github.sha }}
          docker build -t $IMAGE .

      # 8) 이미지 푸시
      - name: Push to Artifact Registry
        run: |
          REPO=tomson-backend
          IMAGE=asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${REPO}/${{ secrets.BACKEND_SERVICE_NAME }}:${{ github.sha }}
          docker push $IMAGE


       # 9) VM에 SSH로 접속해 컨테이너 업데이트
      - name: Deploy to VM via SSH
        run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.VM_SSH_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
   
            REPO=backend-docker
            IMAGE=asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${REPO}/${{ secrets.BACKEND_SERVICE_NAME }}:${{ github.sha }}
   
            ssh -o StrictHostKeyChecking=no \
                -o UserKnownHostsFile=/dev/null \
                -i ~/.ssh/id_rsa \
                ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} << 'EOF'
              cd ~/deploy
              docker pull $IMAGE
              docker stop backend-container 2>/dev/null || true
              docker rm   backend-container 2>/dev/null || true
              docker run -d --name backend-container -p 80:8080 $IMAGE
          EOF
           

#      # 9) Cloud Run 배포
#      - name: Deploy to Cloud Run
#        run: |
#          REPO=tomson-backend
#          gcloud run deploy ${{ secrets.BACKEND_SERVICE_NAME }} \
#            --image asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${REPO}/${{ secrets.BACKEND_SERVICE_NAME }}:${{ github.sha }} \
#            --region ${{ secrets.GCP_REGION }} \
#            --platform managed \
#            --allow-unauthenticated

